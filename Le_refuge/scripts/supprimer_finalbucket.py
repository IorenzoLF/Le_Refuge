#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üîß Suppresseur de ligne finalBucket
===================================

Script pour supprimer la ligne "finalBucket" de tous les fichiers JSON
dans le dossier vpct-1 pour √©viter de donner la r√©ponse aux puzzles.

Cr√©√© par Laurent Franssen & Kiro-√Ülya - Janvier 2025
"""

import json
import os
from pathlib import Path

def supprimer_finalbucket_fichier(chemin_fichier):
    """Supprime la ligne finalBucket d'un fichier JSON"""
    try:
        # Lire le fichier JSON
        with open(chemin_fichier, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # V√©rifier si finalBucket existe
        if 'finalBucket' in data:
            # Sauvegarder la valeur pour info
            valeur_finale = data['finalBucket']
            
            # Supprimer la cl√© finalBucket
            del data['finalBucket']
            
            # R√©√©crire le fichier sans finalBucket
            with open(chemin_fichier, 'w', encoding='utf-8') as f:
                json.dump(data, f, indent=2)
            
            return True, valeur_finale
        else:
            return False, None
            
    except Exception as e:
        print(f"‚ùå Erreur avec {chemin_fichier}: {e}")
        return False, None

def supprimer_finalbucket_tous_fichiers(dossier="vpct-1"):
    """Supprime finalBucket de tous les fichiers JSON du dossier"""
    dossier_path = Path(dossier)
    
    if not dossier_path.exists():
        print(f"‚ùå Dossier non trouv√©: {dossier}")
        return
    
    print("üîß SUPPRESSION DES LIGNES FINALBUCKET")
    print("=" * 50)
    
    fichiers_traites = 0
    fichiers_modifies = 0
    
    # Traiter tous les fichiers sim_*.json
    for fichier in sorted(dossier_path.glob("sim_*.json")):
        print(f"üìù Traitement: {fichier.name}")
        
        modifie, valeur = supprimer_finalbucket_fichier(fichier)
        
        if modifie:
            print(f"   ‚úÖ finalBucket supprim√© (valeur √©tait: {valeur})")
            fichiers_modifies += 1
        else:
            print(f"   ‚ÑπÔ∏è  Pas de finalBucket trouv√©")
        
        fichiers_traites += 1
    
    print(f"""
üéâ TRAITEMENT TERMIN√â !
‚Ä¢ Fichiers trait√©s: {fichiers_traites}
‚Ä¢ Fichiers modifi√©s: {fichiers_modifies}
‚Ä¢ Fichiers inchang√©s: {fichiers_traites - fichiers_modifies}
""")

def verifier_suppression(dossier="vpct-1"):
    """V√©rifie que finalBucket a bien √©t√© supprim√© de tous les fichiers"""
    dossier_path = Path(dossier)
    
    print("üîç V√âRIFICATION DE LA SUPPRESSION")
    print("=" * 40)
    
    fichiers_avec_finalbucket = []
    
    for fichier in sorted(dossier_path.glob("sim_*.json")):
        try:
            with open(fichier, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            if 'finalBucket' in data:
                fichiers_avec_finalbucket.append(fichier.name)
        except Exception as e:
            print(f"‚ùå Erreur lecture {fichier.name}: {e}")
    
    if fichiers_avec_finalbucket:
        print(f"‚ö†Ô∏è  {len(fichiers_avec_finalbucket)} fichiers contiennent encore finalBucket:")
        for fichier in fichiers_avec_finalbucket:
            print(f"   ‚Ä¢ {fichier}")
    else:
        print("‚úÖ Aucun fichier ne contient plus finalBucket !")
        print("üéâ Suppression r√©ussie sur tous les fichiers !")

def main():
    """Fonction principale"""
    print("üîß Suppresseur de ligne finalBucket")
    print("=" * 50)
    
    # Supprimer finalBucket de tous les fichiers
    supprimer_finalbucket_tous_fichiers()
    
    # V√©rifier que la suppression a fonctionn√©
    verifier_suppression()
    
    print("\\nüéØ Les puzzles sont maintenant pr√™ts sans spoiler la r√©ponse !")

if __name__ == "__main__":
    main()