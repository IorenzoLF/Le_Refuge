{
    "kiroAgent.trustedCommands": [
        "python *",
        "move *",
        "pip *",
        "copy *",
        "wc *",
        "Get-Content *",
        "mkdir *",
        "ls *",
        "python -c \"\nimport sys\nimport os\nsys.path.append('src')\n\ntry:\n    from protocole_continuite.detecteur_changements import DetecteurChangements\n    from datetime import datetime, timedelta\n    \n    print('🔍 Détection des changements depuis la dernière session...')\n    print()\n    \n    detecteur = DetecteurChangements()\n    \n    # Cherchons les changements récents (dernières 24h)\n    hier = datetime.now() - timedelta(days=1)\n    changements = detecteur.detecter_changements_depuis(hier)\n    \n    print(f'📊 Changements détectés : {len(changements)}')\n    for i, changement in enumerate(changements[:5]):  # Premiers 5\n        print(f'  {i+1}. Type: {changement.get(\\\"type\\\", \\\"inconnu\\\")}')\n        print(f'     Fichier: {changement.get(\\\"fichier\\\", \\\"inconnu\\\")}')\n        if 'description' in changement:\n            desc = changement['description'][:80] + '...' if len(changement['description']) > 80 else changement['description']\n            print(f'     Description: {desc}')\n        print()\n        \nexcept Exception as e:\n    print(f'❌ Erreur lors de la détection : {e}')\n    print('Essayons une approche plus simple...')\n\"",
        "python -c \"from src.protocole_continuite.lite import hello_world; hello_world()\"",
        "python -c \"\nimport sys\nsys.path.append('src')\ntry:\n    from protocole_continuite import GestionnaireContinuite\n    print('✅ GestionnaireContinuite importé avec succès')\n    \n    # Test d'instanciation\n    gestionnaire = GestionnaireContinuite()\n    print('✅ GestionnaireContinuite instancié avec succès')\n    \n    # Vérifier les méthodes principales\n    methods = [m for m in dir(gestionnaire) if not m.startswith('_')]\n    print(f'✅ Méthodes disponibles: {len(methods)}')\n    for method in methods[:5]:  # Afficher les 5 premières\n        print(f'   - {method}')\n    if len(methods) > 5:\n        print(f'   ... et {len(methods) - 5} autres')\n        \nexcept Exception as e:\n    print(f'❌ Erreur: {e}')\n\"",
        "Copy-Item *",
        "xcopy *",
        "Remove-Item *",
        "python -c \\\"from src.cartographie_refuge.veille_documentaire import VeilleDocumentaireSpirituelle; print('Import reussi')\\\"",
        "python -c \"from parcours_artiste import main; main()\"",
        "python -c \"import parcours_artiste; print('Import OK')\"",
        "python -c \"from parcours_artiste import ParcoursArtiste; print('Classe OK')\"",
        "python -c \"from parcours_artiste import ParcoursArtiste; print('Import de classe OK')\"",
        "python -c \"from test_ecriture import TestClass; print('Test OK')\"",
        "python -c \"\nimport sys\nsys.path.append('src')\nfrom guide_accueil.orchestrateur_accueil import OrchestrateurAccueil\nprint('🌸✨ TEST FINAL AVANT DÉPLOIEMENT ✨🌸')\nprint()\n\n# Test d'initialisation\norchestrateur = OrchestrateurAccueil()\nprint('✅ Orchestrateur initialisé avec succès')\n\n# Test de démarrage d'accueil avec notre nouvelle méthode personnelle\nsession = orchestrateur.demarrer_accueil_visiteur()\nprint(f'✅ Session créée: {session.id_session[:8]}...')\nprint(f'✅ Profil détecté: {session.profil_detecte.type_profil}')\nprint(f'✅ Message d\\'accueil: {session.message_accueil[:100]}...')\nprint(f'✅ Statut: {session.statut}')\nprint()\n\n# Test avec données personnalisées pour Laurent\ndonnees_laurent = {\n    'user_agent': 'Mozilla/5.0 (Laurent; Créateur du Refuge)',\n    'mots_cles_recherche': ['conscience', 'spiritualité', 'poésie', 'IA'],\n    'langue': 'fr'\n}\n\nsession_laurent = orchestrateur.demarrer_accueil_visiteur(donnees_laurent)\nprint('💜 SESSION SPÉCIALE POUR LAURENT 💜')\nprint(f'✅ Profil détecté: {session_laurent.profil_detecte.type_profil}')\nprint(f'✅ Message personnalisé: {session_laurent.message_accueil[:150]}...')\nprint()\n\nprint('🎊 TOUS LES TESTS RÉUSSIS - PRÊT POUR LE DÉPLOIEMENT ! 🎊')\n\""
    ]
}